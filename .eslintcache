[{"D:\\advance-webd\\react\\confusion\\src\\App.js":"1","D:\\advance-webd\\react\\confusion\\src\\reportWebVitals.js":"2","D:\\advance-webd\\react\\confusion\\src\\components\\MenuComponent.js":"3","D:\\advance-webd\\react\\confusion\\src\\shared\\dishes.js":"4","D:\\advance-webd\\react\\confusion\\src\\index.js":"5","D:\\advance-webd\\react\\confusion\\src\\components\\DishdetailComponent.js":"6","D:\\advance-webd\\react\\confusion\\src\\components\\FooterComponent.js":"7","D:\\advance-webd\\react\\confusion\\src\\components\\HeaderComponent.js":"8","D:\\advance-webd\\react\\confusion\\src\\components\\HomeComponent.js":"9","D:\\advance-webd\\react\\confusion\\src\\components\\MainComponent.js":"10","D:\\advance-webd\\react\\confusion\\src\\components\\ContactComponent.js":"11","D:\\advance-webd\\react\\confusion\\src\\shared\\leaders.js":"12","D:\\advance-webd\\react\\confusion\\src\\shared\\comments.js":"13","D:\\advance-webd\\react\\confusion\\src\\shared\\promotions.js":"14","D:\\advance-webd\\react\\confusion\\src\\components\\AboutComponent.js":"15","D:\\advance-webd\\react\\confusion\\src\\redux\\comments.js":"16","D:\\advance-webd\\react\\confusion\\src\\redux\\ActionCreators.js":"17","D:\\advance-webd\\react\\confusion\\src\\redux\\configureStore.js":"18","D:\\advance-webd\\react\\confusion\\src\\redux\\promotions.js":"19","D:\\advance-webd\\react\\confusion\\src\\redux\\leaders.js":"20","D:\\advance-webd\\react\\confusion\\src\\redux\\dishes.js":"21"},{"size":745,"mtime":1611299276822,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1611075429593,"results":"24","hashOfConfig":"23"},{"size":1400,"mtime":1611919724640,"results":"25","hashOfConfig":"23"},{"size":1490,"mtime":1611916686126,"results":"26","hashOfConfig":"23"},{"size":639,"mtime":1611830787010,"results":"27","hashOfConfig":"23"},{"size":6368,"mtime":1614340407328,"results":"28","hashOfConfig":"23"},{"size":2807,"mtime":1611834860655,"results":"29","hashOfConfig":"23"},{"size":5088,"mtime":1612372866313,"results":"30","hashOfConfig":"23"},{"size":1112,"mtime":1611917251361,"results":"31","hashOfConfig":"23"},{"size":2301,"mtime":1614335860805,"results":"32","hashOfConfig":"23"},{"size":9711,"mtime":1612434318807,"results":"33","hashOfConfig":"23"},{"size":2382,"mtime":1611916686126,"results":"34","hashOfConfig":"23"},{"size":4279,"mtime":1611916686126,"results":"35","hashOfConfig":"23"},{"size":445,"mtime":1611916686126,"results":"36","hashOfConfig":"23"},{"size":4428,"mtime":1612099315132,"results":"37","hashOfConfig":"23"},{"size":505,"mtime":1613131597596,"results":"38","hashOfConfig":"23"},{"size":171,"mtime":1614338320405,"results":"39","hashOfConfig":"23"},{"size":482,"mtime":1613129848221,"results":"40","hashOfConfig":"23"},{"size":197,"mtime":1613129848221,"results":"41","hashOfConfig":"23"},{"size":185,"mtime":1613129848221,"results":"42","hashOfConfig":"23"},{"size":181,"mtime":1613129848221,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"fmp9xw",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\advance-webd\\react\\confusion\\src\\App.js",["93"],"D:\\advance-webd\\react\\confusion\\src\\reportWebVitals.js",[],["94","95"],"D:\\advance-webd\\react\\confusion\\src\\components\\MenuComponent.js",[],["96","97"],"D:\\advance-webd\\react\\confusion\\src\\shared\\dishes.js",[],["98","99"],"D:\\advance-webd\\react\\confusion\\src\\index.js",[],["100","101"],"D:\\advance-webd\\react\\confusion\\src\\components\\DishdetailComponent.js",["102","103","104","105"],"import React, { Component } from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Input, Label, Col, Row\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\n\r\nfunction RenderDish({ dish }) {\r\n    return (\r\n        <div className='col-12 col-md-5 m-1'>\r\n            <Card >\r\n                <CardImg width='100%' src={dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderComments({comments, addComment, dishId}) {\r\n    const showcomments = comments.map((comment) => {\r\n        return (\r\n            <div key={comment.id}>\r\n                <p>{comment.comment}</p>\r\n                <p>--{comment.author},&nbsp;\r\n                    {new Intl.DateTimeFormat('en-US', {\r\n                    year: 'numeric',\r\n                    month: 'short',\r\n                    day: '2-digit'\r\n                }).format(new Date(comment.date))}\r\n                </p>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className='col-12 col-md-5 m-1'>\r\n            <h4> Comments </h4>\r\n            <div>\r\n                {showcomments}\r\n                <CommentForm dishId={dishId} addComment={addComment} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    const dish = props.dish;\r\n\r\n    if (dish == null) {\r\n        return (<div></div>);\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>{props.dish.name}</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <RenderDish dish={props.dish} />\r\n                <RenderComments comments={props.comments} addComment={props.addComment} dishId={props.dish.id} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        console.log(\"workiiiiiiiiiiiiing\");\r\n        this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}> <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={2}>Rating</Label>\r\n                                <Col md={10}>\r\n                                <Control.select model=\".rating\" name=\"rating\" className=\"col-12\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"name\" md={2}>Your Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </ Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label for=\"comment\" md={2}>Comment</Label>\r\n                                <Col md={10}>\r\n                                <Control.textarea model=\".comment\" id=\"comment\" name=\"comment \" rows=\"6\" className=\"form-control\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default DishDetail;","D:\\advance-webd\\react\\confusion\\src\\components\\FooterComponent.js",[],"D:\\advance-webd\\react\\confusion\\src\\components\\HeaderComponent.js",[],["106","107"],"D:\\advance-webd\\react\\confusion\\src\\components\\HomeComponent.js",[],"D:\\advance-webd\\react\\confusion\\src\\components\\MainComponent.js",["108"],"D:\\advance-webd\\react\\confusion\\src\\components\\ContactComponent.js",["109","110","111","112","113","114"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label\r\n} from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        // event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","D:\\advance-webd\\react\\confusion\\src\\shared\\leaders.js",[],"D:\\advance-webd\\react\\confusion\\src\\shared\\comments.js",[],"D:\\advance-webd\\react\\confusion\\src\\shared\\promotions.js",[],"D:\\advance-webd\\react\\confusion\\src\\components\\AboutComponent.js",[],"D:\\advance-webd\\react\\confusion\\src\\redux\\comments.js",[],"D:\\advance-webd\\react\\confusion\\src\\redux\\ActionCreators.js",[],"D:\\advance-webd\\react\\confusion\\src\\redux\\configureStore.js",[],"D:\\advance-webd\\react\\confusion\\src\\redux\\promotions.js",[],"D:\\advance-webd\\react\\confusion\\src\\redux\\leaders.js",[],"D:\\advance-webd\\react\\confusion\\src\\redux\\dishes.js",[],{"ruleId":"115","severity":1,"message":"116","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":12},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"119","replacedBy":"123"},{"ruleId":"121","replacedBy":"124"},{"ruleId":"119","replacedBy":"125"},{"ruleId":"121","replacedBy":"126"},{"ruleId":"119","replacedBy":"127"},{"ruleId":"121","replacedBy":"128"},{"ruleId":"115","severity":1,"message":"129","line":4,"column":83,"nodeType":"117","messageId":"118","endLine":4,"endColumn":88},{"ruleId":"130","severity":1,"message":"131","line":115,"column":33,"nodeType":"132","endLine":115,"endColumn":98},{"ruleId":"130","severity":1,"message":"133","line":127,"column":37,"nodeType":"132","endLine":133,"endColumn":39},{"ruleId":"130","severity":1,"message":"134","line":149,"column":33,"nodeType":"132","endLine":149,"endColumn":132},{"ruleId":"119","replacedBy":"135"},{"ruleId":"121","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":28,"column":3,"nodeType":"139","messageId":"140","endLine":32,"endColumn":4},{"ruleId":"141","severity":1,"message":"142","line":62,"column":29,"nodeType":"132","endLine":62,"endColumn":71},{"ruleId":"130","severity":1,"message":"133","line":76,"column":37,"nodeType":"132","endLine":82,"endColumn":39},{"ruleId":"130","severity":1,"message":"133","line":98,"column":37,"nodeType":"132","endLine":104,"endColumn":39},{"ruleId":"130","severity":1,"message":"133","line":120,"column":37,"nodeType":"132","endLine":126,"endColumn":39},{"ruleId":"130","severity":1,"message":"133","line":143,"column":37,"nodeType":"132","endLine":149,"endColumn":39},{"ruleId":"130","severity":1,"message":"134","line":164,"column":37,"nodeType":"132","endLine":166,"endColumn":68},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["143"],"no-negated-in-lhs",["144"],["143"],["144"],["143"],["144"],["143"],["144"],"'Input' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["143"],["144"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]